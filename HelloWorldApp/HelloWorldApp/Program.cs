namespace HelloWorldApp // Это пространство имён - в нём лежит всё
{
    /// <summary>
    /// Это класс. Класс - это набор кода и переменных.
    /// Код называется методами(действие). Переменные называются свойствами(описание).
    /// </summary>
    public class Program // название класса (программа) и модификатор. Всегда вход в класс с слова class
    {
        /// <summary>
        /// Это метод Main() - главный метод программы (с него начинает выполняться программа) ???Где взять названия всех методов и у нас главный метод это string? в этом фрагменте проги 
        /// static - не требуется создание объекта  ???ммейн это метод, а статик? И все виды понятия статик.
        /// void - метод ничего не возвращает. ??? и тут метод.. запутался :(
        /// Main - название метода
        /// string[] args - это параметры метода (это данные, которые приходят на вход в метод)
        /// </summary>
        public static void Main(string[] args) // два модификатор, p и s, void тип данных. Main имя метода-исключения. Но метод(его название) можно описать и назвать самостоятельно
        {
            var a = EnterNumber("A"); // Вводим число A вызвав метод EnterNumber(), передав ему имя числа "A"
            var b = EnterNumber("B"); // То же самое, но для числа B
            var c = EnterNumber("C"); // n = "C"

            var p = a + b + c; //var указание среде программирования угадать тип переменной вплоть до букв а не только цифр

            Console.WriteLine($"Периметр = {p}");// если без знака, то прога будет просто писать текст, а не видеть переменную

            if (a < b) // Первая проверка - является-ли a меньше b?
            {
                // Выполняется если условие истинно (да, является)
                Console.WriteLine("A меньше B");
            }
            else if (a == b) // Вторая проверка - является-ли a равным b (
            {
                // Выполняется если условие истино (да является)
                Console.WriteLine("A равно B");
            }
            else
            {
                // Выполняется если все вышестоящие условия не выполнились (a больше b)
                Console.WriteLine("A больше B");
            }

            Console.WriteLine($"{a} + {b} = {a + b}"); // Тут мы выполняем 4 операции над числами a и b
            Console.WriteLine($"{a} - {b} = {a - b}");
            Console.WriteLine($"{a} * {b} = {a * b}");
            Console.WriteLine($"{a} / {b} = {a / b}");

            double e = a + b; // В переменную e кладём результат сложения a и b
            if (e > 0) // Сумма больше нуля?
            {
                // Да, больше
                Console.WriteLine("Сумма A и B положительна.");
            }
            else if (e == 0) // Сравнить: двойное равно ==, не равно != (сумма равна 0?)
            {
                // Да, равна
                Console.WriteLine("Сумма A и B равна 0"); //??? а для чего именно это действие? В учебных целях? Больно узконаправленно
            }

            // Зацикливаем программу пока пользователь не нажмёт Y
            WaitForExit(); // Да, метод. Здесь происходит вызов метода
        }

        /// <summary>
        /// Метод ввода числа с клавиатуры
        /// </summary>
        /// <param name="n">Имя числа (оно будет распечатываться на экране)</param>
        /// <returns>Введённое число</returns>
        public static double EnterNumber(string n) // string n - переменная типа "строка"
        {
            while (true) // Бесконечный цикл, проверка на ошибки то есть в этом случае проверка ввода числа
            {
                Console.WriteLine($"Введите число {n}"); // Печатаем "Введите число" и содержимое переменной n

                double result; // Объявили переменную с именем result типа double

                // Читаем с консоли строку, пытаемся её превратить в число, проверяем, успешно-ли
                if (double.TryParse(Console.ReadLine(), out result) == true)
                {
                    return result;
                }

                Console.WriteLine("Вы ввели не число, повторите попытку!");
            }
        }

        /// <summary>
        /// Это новый метод. Он называется WaiteForExit
        /// Он ничего не возвращает (void)
        /// Он ничего не принимает от других частей программы - пустые скобки
        /// </summary>
        public static void WaitForExit()
        {
            Console.WriteLine("Нажмите y для завершения");

            // Это - переменная (то есть данные)
            // У переменных есть тип (какие данные в ней), имя и значение
            // Тип нашей переменной ConsoleKeyInfo - информация о нажатой клавише
            // Имя нашей переменной - enteredKey
            // Значение ещё не присвоено
            ConsoleKeyInfo enteredKey; //это название переменной и название?

            do // Начало цикла - повторяющихся действий
            {
                // Здесь мы вызываем метод ReadKey() у класса Console
                // Метод ReadKey() возвращает данные - информацию о том, какая сейчас нажата
                // клавиша.
                // Мы присваиваем эти данные в переменную при помощи знака =
                enteredKey = Console.ReadKey();
            }
            while (enteredKey.KeyChar != 'y'); // Условие выхода из цикла
            // Пока свойство KeyChar (знак на кнопке) информации о кнопке не равно
            // символу 'y' - повторять цикл.
        }
    }
}